# Configuration for the River System Integration Test

simulation_settings:
  duration: 50  # seconds
  time_step: 1.0 # second

agent_society:
  # 1. An Inflow agent to start the system
  - id: inflow_source
    class: chs_sdk.agents.disturbance_agents.InflowAgent
    params:
      topic: "inflow/source"
      # Constant inflow of 15 m^3/s for 50 steps
      rainfall_pattern: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15]

  # 2. A channel to carry the water to the reservoir
  - id: river1
    class: chs_sdk.agents.body_agents.ChannelAgent
    params:
      K: 3600
      x: 0.2
      initial_outflow: 15.0
      inflow_topic: "inflow/source"
      state_topic: "tank/main_reservoir/inflow" # Route output directly to tank's inflow

  # 3. A reservoir (tank) to store the water
  - id: main_reservoir
    class: chs_sdk.agents.body_agents.TankAgent
    params:
      area: 10000
      initial_level: 100.0
      # Automatically subscribes to:
      # - tank/main_reservoir/inflow (from river1)
      # - tank/main_reservoir/release_outflow (from hydro_station)
      # Publishes state to:
      # - tank/main_reservoir/state

  # 4. Hydropower station discharging from the reservoir
  - id: hydro_station
    class: chs_sdk.agents.body_agents.HydropowerStationAgent
    params:
      max_flow_area: 15.0
      discharge_coeff: 0.8
      efficiency: 0.9
      upstream_topic: "tank/main_reservoir/state"
      downstream_topic: "tailwater/level"
      vane_opening_topic: "control/vane_opening"
      state_topic: "hydro_station/state"
      # Add the release topic to notify the reservoir of its outflow
      release_topic: "tank/main_reservoir/release_outflow"

  # 5. A second channel downstream of the power station
  - id: river2
    class: chs_sdk.agents.body_agents.ChannelAgent
    params:
      K: 1800
      x: 0.2
      initial_outflow: 10.0
      inflow_topic: "hydro_station/state"
      state_topic: "river2/state"

  # 6. Dummy agent for constant downstream water level (tailwater)
  - id: tailwater_source
    class: chs_sdk.agents.disturbance_agents.InflowAgent
    params:
      topic: "tailwater/level"
      rainfall_pattern: [80] # InflowAgent will just repeat the last value if pattern is shorter than duration

  # 7. Dummy agent for constant vane opening
  - id: vane_control
    class: chs_sdk.agents.disturbance_agents.InflowAgent
    params:
      topic: "control/vane_opening"
      rainfall_pattern: [0.7] # Constant 70% opening

  # 8. The data logger to see what's happening
  - id: data_logger
    class: chs_sdk.agents.management_agents.DataLoggerAgent
    params:
      topics_to_log: ["#"]
